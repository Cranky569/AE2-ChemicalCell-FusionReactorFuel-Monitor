-- Peripherals
local mon    = peripheral.find("monitor")
local bridge = peripheral.find("meBridge") or peripheral.find("me_bridge") or peripheral.find("bridge")

if not mon then error("Monitor nicht gefunden!") end
if not bridge then error("Bridge nicht gefunden!") end

mon.setTextScale(2)
mon.clear()

-- CC Colors
local CCColors = colors
local defaultColor = CCColors.white
local headerColor  = CCColors.yellow

-- Chemical-Farben
local tracked = {
    {name = "mekanismgenerators:deuterium",   label = "Deuterium", color = CCColors.red},
    {name = "mekanismgenerators:tritium",     label = "Tritium",   color = CCColors.green},
    {name = "mekanismgenerators:fusion_fuel", label = "D-T Fuel",  color = CCColors.purple},
}

-- Hilfsfunktion: Zahl in k/M/G umwandeln
local function formatAmount(n)
    if n >= 1e9 then
        return string.format("%.2fG", n/1e9)
    elseif n >= 1e6 then
        return string.format("%.2fM", n/1e6)
    elseif n >= 1e3 then
        return string.format("%.2fk", n/1e3)
    else
        return tostring(n)
    end
end

-- Monitor-Zeile schreiben
local function writeLine(y, text, color)
    mon.setCursorPos(1, y)
    if color then mon.setTextColor(color) end
    mon.write(text)
    mon.setTextColor(defaultColor)
end

while true do
    mon.clear()
    local row = 1
    writeLine(row, "Fusion Reactor Fuel", headerColor)
    row = row + 2  -- Leerzeile

    -- Chemicals von bridge.getChemicals()
    local ok, chemicals = pcall(function() return bridge.getChemicals() end)
    if not ok or type(chemicals) ~= "table" then
        writeLine(row, "Fehler beim Abrufen der Chemicals")
        sleep(2)
    else
        for _,chem in ipairs(tracked) do
            local amount = 0
            for _,entry in pairs(chemicals) do
                local name = entry.name or entry.chemical or ""
                if name == chem.name then
                    amount = entry.count or 0  -- count nutzen
                end
            end
            writeLine(row, string.format("%s (count=%s B)", chem.label, formatAmount(amount)), chem.color)
            row = row + 2  -- Leerzeile nach jedem Chemical
        end
    end
    sleep(2)
end
